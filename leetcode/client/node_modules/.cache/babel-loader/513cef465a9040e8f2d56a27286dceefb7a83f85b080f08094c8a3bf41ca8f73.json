{"ast":null,"code":"var _jsxFileName = \"/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/EasyCards.jsx\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EasyCard({\n  easyQuestions\n}) {\n  // Ensure easyQuestions is an array before attempting to map over it\n  if (!Array.isArray(easyQuestions)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No easy questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [easyQuestions.map(value => /*#__PURE__*/_jsxDEV(Card, {\n      number: value.questionNo,\n      description: value.description\n    }, value.questionNo, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Card, {\n      number: \"helow\",\n      description: \"hwllo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      number: \"helow\",\n      description: \"hwllo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = EasyCard;\nexport default EasyCard;\nvar _c;\n$RefreshReg$(_c, \"EasyCard\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","EasyCard","easyQuestions","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","value","number","questionNo","description","_c","$RefreshReg$"],"sources":["/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/EasyCards.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\n\nfunction EasyCard({ easyQuestions }) {\n  // Ensure easyQuestions is an array before attempting to map over it\n  if (!Array.isArray(easyQuestions)) {\n    return <div>No easy questions available.</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col\">\n      {easyQuestions.map((value) => (\n        <Card\n          key={value.questionNo}\n          number={value.questionNo}\n          description={value.description}\n        />\n      ))}\n      <Card number=\"helow\" description=\"hwllo\" />\n      <Card number=\"helow\" description=\"hwllo\" />\n    </div>\n  );\n}\n\nexport default EasyCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC;AAAc,CAAC,EAAE;EACnC;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,aAAa,CAAC,EAAE;IACjC,oBAAOF,OAAA;MAAAK,QAAA,EAAK;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChD;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAL,QAAA,GAC3BH,aAAa,CAACS,GAAG,CAAEC,KAAK,iBACvBZ,OAAA,CAACF,IAAI;MAEHe,MAAM,EAAED,KAAK,CAACE,UAAW;MACzBC,WAAW,EAAEH,KAAK,CAACG;IAAY,GAF1BH,KAAK,CAACE,UAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGtB,CACF,CAAC,eACFT,OAAA,CAACF,IAAI;MAACe,MAAM,EAAC,OAAO;MAACE,WAAW,EAAC;IAAO;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CT,OAAA,CAACF,IAAI;MAACe,MAAM,EAAC,OAAO;MAACE,WAAW,EAAC;IAAO;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACO,EAAA,GAnBQf,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
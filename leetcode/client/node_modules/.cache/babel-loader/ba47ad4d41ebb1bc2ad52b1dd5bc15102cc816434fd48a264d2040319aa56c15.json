{"ast":null,"code":"var _jsxFileName = \"/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/Introduction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport EasyCard from \"./EasyCards\";\nimport MediumCard from \"./MediumCards\";\nimport HardCards from \"./HardCards\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Introduction() {\n  _s();\n  const [message, setMessage] = useState({\n    no: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(data => setMessage({\n      no: data.no,\n      description: data.description\n    })).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const [problems, setProblems] = useState({\n    easy: \"\",\n    medium: \"\",\n    hard: \"\"\n  });\n  useEffect(() => {\n    fetch(\"/get-question\").then(response => response.json).then(data => setProblems({\n      easy: data.easy,\n      medium: data.medium,\n      hard: data.hard\n    })).catch(error => console.error(\"Error at route get-question\", error));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex flex-row justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(EasyCard, {\n        easyQuestions: problems.easy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MediumCard, {\n        easyQuestions: problems.medium\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HardCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Introduction, \"v1s75CML9xIl8wIOAd79RcIpO6I=\");\n_c = Introduction;\nexport default Introduction;\nvar _c;\n$RefreshReg$(_c, \"Introduction\");","map":{"version":3,"names":["React","useEffect","useState","Card","EasyCard","MediumCard","HardCards","jsxDEV","_jsxDEV","Fragment","_Fragment","Introduction","_s","message","setMessage","no","description","fetch","then","response","json","data","catch","error","console","problems","setProblems","easy","medium","hard","children","className","easyQuestions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/Introduction.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport EasyCard from \"./EasyCards\";\nimport MediumCard from \"./MediumCards\";\nimport HardCards from \"./HardCards\";\n\nfunction Introduction() {\n  const [message, setMessage] = useState({ no: \"\", description: \"\" });\n\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((response) => response.json())\n      .then((data) =>\n        setMessage({ no: data.no, description: data.description })\n      )\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  const [problems, setProblems] = useState({ easy: \"\", medium: \"\", hard: \"\" });\n\n  useEffect(() => {\n    fetch(\"/get-question\")\n      .then((response) => response.json)\n      .then((data) =>\n        setProblems({\n          easy: data.easy,\n          medium: data.medium,\n          hard: data.hard,\n        })\n      )\n      .catch((error) => console.error(\"Error at route get-question\", error));\n  });\n  \n  return (\n    <>\n      <div className=\"container mx-auto flex flex-row justify-center space-x-4\">\n        {/* For Easy Problem */}\n        <EasyCard easyQuestions={problems.easy}/>\n        {/* <div>\n          <Card number={message.no} description={message.description} />\n        </div> */}\n\n        {/* For Medium Problem */}\n        <MediumCard easyQuestions={problems.medium}/>\n\n        {/* For Hard Problem */}\n        <HardCards />\n      </div>\n    </>\n  );\n}\n\nexport default Introduction;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,EAAE,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAEnEf,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,MAAM,CAAC,CACVC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IACTP,UAAU,CAAC;MAAEC,EAAE,EAAEM,IAAI,CAACN,EAAE;MAAEC,WAAW,EAAEK,IAAI,CAACL;IAAY,CAAC,CAC3D,CAAC,CACAM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC;IAAEyB,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAE5E5B,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,eAAe,CAAC,CACnBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCF,IAAI,CAAEG,IAAI,IACTK,WAAW,CAAC;MACVC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,MAAM,EAAEP,IAAI,CAACO,MAAM;MACnBC,IAAI,EAAER,IAAI,CAACQ;IACb,CAAC,CACH,CAAC,CACAP,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,CAAC;EAEF,oBACEf,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACEtB,OAAA;MAAKuB,SAAS,EAAC,0DAA0D;MAAAD,QAAA,gBAEvEtB,OAAA,CAACJ,QAAQ;QAAC4B,aAAa,EAAEP,QAAQ,CAACE;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAMzC5B,OAAA,CAACH,UAAU;QAAC2B,aAAa,EAAEP,QAAQ,CAACG;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAG7C5B,OAAA,CAACF,SAAS;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACN,CAAC;AAEP;AAACxB,EAAA,CA5CQD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA8CrB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
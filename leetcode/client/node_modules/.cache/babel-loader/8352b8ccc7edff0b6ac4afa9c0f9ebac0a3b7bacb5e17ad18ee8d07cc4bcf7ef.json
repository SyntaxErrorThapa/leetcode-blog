{"ast":null,"code":"var _jsxFileName = \"/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/Introduction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport EasyCard from \"./EasyCards\";\nimport MediumCard from \"./MediumCards\";\nimport HardCards from \"./HardCards\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Introduction() {\n  _s();\n  const [problems, setProblems] = useState({\n    easy: [],\n    medium: [],\n    hard: []\n  });\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState({\n    questionNo: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    fetch(\"/get-question\").then(response => response.json()).then(data => {\n      setProblems({\n        easy: data.questions.easy,\n        medium: data.questions.medium,\n        hard: data.questions.hard\n      });\n    }).catch(error => console.error(\"Error fetching questions:\", error));\n  }, []); // Empty dependency array means this runs once after the initial render\n\n  const openModal = content => {\n    setModalContent(content);\n    setModalVisible(true);\n  };\n  const closeModal = () => {\n    setModalVisible(false);\n    setModalContent({\n      questionNo: \"\",\n      description: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex flex-row justify-center space-x-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center h-screen overflow-y-auto no-scrollbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-3xl mt-6 mb-4 \",\n          children: [\"Easy: \", problems.easy.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EasyCard, {\n          easyQuestions: problems.easy,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center h-screen overflow-y-auto no-scrollbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-3xl mt-6 mb-4\",\n          children: [\"Medium: \", problems.medium.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MediumCard, {\n          mediumQuestions: problems.medium,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center h-screen overflow-y-auto no-scrollbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-3xl mt-6 mb-4\",\n          children: [\"Hard: \", problems.medium.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HardCards, {\n          hardQuestions: problems.hard,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Introduction, \"mMF/maBnXDyocow2uZBdZ9Jusko=\");\n_c = Introduction;\nexport default Introduction;\nvar _c;\n$RefreshReg$(_c, \"Introduction\");","map":{"version":3,"names":["React","useEffect","useState","EasyCard","MediumCard","HardCards","Modal","jsxDEV","_jsxDEV","Introduction","_s","problems","setProblems","easy","medium","hard","modalVisible","setModalVisible","modalContent","setModalContent","questionNo","description","fetch","then","response","json","data","questions","catch","error","console","openModal","content","closeModal","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","easyQuestions","mediumQuestions","hardQuestions","_c","$RefreshReg$"],"sources":["/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/Introduction.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport EasyCard from \"./EasyCards\";\nimport MediumCard from \"./MediumCards\";\nimport HardCards from \"./HardCards\";\nimport Modal from \"./Modal\";\n\nfunction Introduction() {\n  const [problems, setProblems] = useState({ easy: [], medium: [], hard: [] });\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState({\n    questionNo: \"\",\n    description: \"\",\n  });\n\n  useEffect(() => {\n    fetch(\"/get-question\")\n      .then((response) => response.json())\n      .then((data) => {\n        setProblems({\n          easy: data.questions.easy,\n          medium: data.questions.medium,\n          hard: data.questions.hard,\n        });\n      })\n      .catch((error) => console.error(\"Error fetching questions:\", error));\n  }, []); // Empty dependency array means this runs once after the initial render\n\n  const openModal = (content) => {\n    setModalContent(content);\n    setModalVisible(true);\n  };\n\n  const closeModal = () => {\n    setModalVisible(false);\n    setModalContent({ questionNo: \"\", description: \"\" });\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-8\">\n      <div className=\"container mx-auto flex flex-row justify-center space-x-8\">\n        <div className=\"text-center h-screen overflow-y-auto no-scrollbar\">\n          <div className=\"font-bold text-3xl mt-6 mb-4 \">Easy: {problems.easy.length}</div>\n          <EasyCard easyQuestions={problems.easy} openModal={openModal} />\n        </div>\n        <div className=\"text-center h-screen overflow-y-auto no-scrollbar\">\n          <div className=\"font-bold text-3xl mt-6 mb-4\">Medium: {problems.medium.length}</div>\n          <MediumCard mediumQuestions={problems.medium} openModal={openModal} />\n        </div>\n        <div className=\"text-center h-screen overflow-y-auto no-scrollbar\">\n          <div className=\"font-bold text-3xl mt-6 mb-4\">Hard: {problems.medium.length}</div>\n          <HardCards hardQuestions={problems.hard} openModal={openModal} />\n        </div>\n      </div>\n\n      \n    </div>\n    \n  );\n}\n\nexport default Introduction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
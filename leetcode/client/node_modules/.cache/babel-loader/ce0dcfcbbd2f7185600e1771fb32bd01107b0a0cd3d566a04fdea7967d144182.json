{"ast":null,"code":"var _jsxFileName = \"/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/Introduction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport EasyCard from \"./EasyCards\";\nimport MediumCard from \"./MediumCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Introduction() {\n  _s();\n  const [message, setMessage] = useState({\n    no: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(data => setMessage({\n      no: data.no,\n      description: data.description\n    })).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const [problems, setProblems] = useState({\n    easy: \"\",\n    medium: \"\",\n    hard: \"\"\n  });\n  useEffect(() => {\n    fetch(\"/get-question\").then(response => response.json).then(data => setProblems({}));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex flex-row justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(EasyCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MediumCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          number: \"0\",\n          description: \"Longest String\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Introduction, \"gQD7CbnEUaswlE92jOutR4Qeftg=\");\n_c = Introduction;\nexport default Introduction;\nvar _c;\n$RefreshReg$(_c, \"Introduction\");","map":{"version":3,"names":["React","useEffect","useState","Card","EasyCard","MediumCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Introduction","_s","message","setMessage","no","description","fetch","then","response","json","data","catch","error","console","problems","setProblems","easy","medium","hard","children","className","fileName","_jsxFileName","lineNumber","columnNumber","number","_c","$RefreshReg$"],"sources":["/home/turtle/gitprojects/leetcode-blog/leetcode/client/src/components/Introduction.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport EasyCard from \"./EasyCards\";\nimport MediumCard from \"./MediumCard\";\n\nfunction Introduction() {\n  const [message, setMessage] = useState({ no: \"\", description: \"\" });\n\n  useEffect(() => {\n    fetch(\"/api\") \n      .then((response) => response.json())\n      .then((data) =>\n        setMessage({ no: data.no, description: data.description })\n      )\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n  \n\n  const [problems, setProblems] =  useState({easy: \"\", medium: \"\", hard: \"\"});\n\n  useEffect(() => {\n    fetch(\"/get-question\").then((response) => response.json).then((data) => setProblems({ }))\n  })\n\n  return (\n    <>\n      \n      <div className=\"container mx-auto flex flex-row justify-center space-x-4\">\n        {/* For Easy Problem */}\n        <EasyCard />\n        {/* <div>\n          <Card number={message.no} description={message.description} />\n        </div> */}\n\n        {/* For Medium Problem */}\n        <MediumCard />\n\n        {/* For Hard Problem */}\n        <div>\n          <Card number=\"0\" description=\"Longest String\" />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Introduction;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAAEY,EAAE,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAEnEd,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,MAAM,CAAC,CACVC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IACTP,UAAU,CAAC;MAAEC,EAAE,EAAEM,IAAI,CAACN,EAAE;MAAEC,WAAW,EAAEK,IAAI,CAACL;IAAY,CAAC,CAC3D,CAAC,CACAM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAIvB,QAAQ,CAAC;IAACwB,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAE3E3B,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,eAAe,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAKK,WAAW,CAAC,CAAE,CAAC,CAAC,CAAC;EAC3F,CAAC,CAAC;EAEF,oBACElB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eAEEtB,OAAA;MAAKuB,SAAS,EAAC,0DAA0D;MAAAD,QAAA,gBAEvEtB,OAAA,CAACH,QAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAMZ3B,OAAA,CAACF,UAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGd3B,OAAA;QAAAsB,QAAA,eACEtB,OAAA,CAACJ,IAAI;UAACgC,MAAM,EAAC,GAAG;UAACpB,WAAW,EAAC;QAAgB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACvB,EAAA,CAvCQD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAyCrB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}